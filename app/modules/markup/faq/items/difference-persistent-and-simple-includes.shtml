<!-- #bbinclude "/markup/#MODULE#/types/default.shtml"
#bbincludeoptions#="inline=true"
#QUESTION#		= 'What’s the difference between a “simple” and a “persistent” include?'
#ANSWER#		= '<p><strong>Simple includes</strong> just pull in the contents of the child file. If that child file calls another include, then that is processed first. If variables have already been defined higher up in the chain, then they are passed down unaltered. But a simple include can’t define or overwrite variables on its own. If the simple include is in the top-level html page file, then it will be replaced by the child file. Simple includes aren’t often used in top-level html pages for this reason. Simple includes are not replaced when they do not appear in the top-level html page. An example of a simple include is: <code><pre>
&num;bbinclude &apos;header.shtml&apos;
</pre></code></p><p><strong>Persistent includes</strong> are wrapped in HTML comment tags. They can define or overwrite variables. And they will not be replaced in a top-level html page file. Instead, the content of the include will be placed between the two parts of an persistent include, each of which are wrapped in an html comment. The boilerplate #bbincludeoptions# variable just prevents a blank line from being inserted. An example of a persistent include is: 
<code><pre>
&lt;!-- &num;bbinclude &apos;/markup/faq/entry.shtml&apos;
&num;bbincludeoptions&num;=&quot;inline=true&quot;
&num;INDENT&num;	= &quot;			&quot;
--&gt;
&lt;!-- end bbinclude --&gt;
</pre></code></p>'
#ID#			= 'differencePersistentSimpleIncludes'
-->
<!-- end bbinclude -->